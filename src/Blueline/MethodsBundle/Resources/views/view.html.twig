{% extends chromeless ? 'BluelineBundle::base.chromeless.html.twig': 'BluelineBundle::base.html.twig' %}

{% block title %}{{ method.title }} | Methods | {{ parent() }}{% endblock %}

{% block og_title %}{{ method.title }}{% endblock %}
{% block og_description %}Method diagram and other details for {{ method.title }}{% endblock %}
{% block og_image %}{{ url( 'Blueline_Methods_view', { 'url': method.url, '_format': 'png' } ) }}{% endblock %}
{% block oembed %}<link rel="alternate" type="application/json+oembed" href="{{ url('Blueline_Services_oembed', {'_format': 'json', 'url': url('Blueline_Methods_view', {'url': method.url})}) }}" title="{{ method.title }}" />{% endblock %}

{% set breadcrumb = { 'title': 'Methods', 'href': path('Blueline_Methods_welcome') } %}

{% set search = false %}

{% block body %}
{% from 'BluelineBundle:Macros:header.html.twig' import header %}
	<section class="method">
		{{ header( { 'title': method.title }, null, { 'id': 'method_tabBar', 'active': 1, 'tabs': [
			{ 'title': 'Details', 'content': 'method_details' },
			{ 'title': 'Numbers', 'content': 'method_numbers' },
			{ 'title': 'Line', 'content': 'method_line' },
			{ 'title': 'Grid', 'content': 'method_grid' }
		] } ) }}
		<div id="method_details" class="details">
			<dl>
{% if method.provisional %}
				<dt class="alone">This method is provisionally named</dt>
{% endif %}
{% if method.renamed is not empty %}
				<dt>Originally named</dt>
				<dd>
				{% for renamed in method.renamed %}
					{{ renamed.rungTitle }}{{ renamed.date ? (' on <time datetime="'~renamed.date|date('Y-m-d')~'">'~renamed.date|date('j<\\s\\up>S</\\s\\up> M Y')~'</time>')|raw }}<br />
				{% endfor %}
				</dd>
{% endif %}
				<dt>Classification</dt>
				<dd>{{ (method.differential? 'Differential ':'') ~ (method.little? 'Little ':'') ~ method.classification ~ ' ' ~ method.stageText }}</dd>
				<dt>Place&nbsp;Notation</dt>
				<dd><abbr title="{{ method.notationExpanded }}">{{ method.notation }}</abbr></dd>
				<dt>Lead&nbsp;Head</dt>
				<dd>{{ (method.leadHead ~ (method.leadHeadCode? ' <small>(Code: ' ~ method.leadHeadCode ~ ')</small>' : ''))|raw }}</dd>
{% if method.palindromic or method.doubleSym or method.rotational %}
				<dt>Symmetry</dt>
				<dd>{{ method.symmetryText }}</dd>
{% endif %}
{% if method.fchGroups is not empty %}
				<dt><abbr title="False Course Head">FCH</abbr>&nbsp;Groups</dt>
				<dd>{{ method.fchGroups }}</dd>
{% endif %}
				<dt>Hunt&nbsp;Bells</dt>
				<dd>{{ ( method.numberOfHunts > 0 )? method.hunts|join(', ') : 'None' }}</dd>
{% if method.lengthOfLead > 0 %}
				<dt>Lead&nbsp;Length</dt>
				<dd>{{ method.lengthOfLead }} rows</dd>
{% endif %}
{% if method.firstTowerbellPeal is not empty %}
				<dt>First&nbsp;towerbell&nbsp;peal</dt>
				<dd><time datetime="{{ method.firstTowerbellpeal.date|date('Y-m-d') }}">{{ method.firstTowerbellPeal.date|date('j<\\s\\up>S</\\s\\up> M Y')|raw }}</time>{% if method.firstTowerbellPeal.location is not empty %} at {% if method.firstTowerbellPeal.locationTower is not empty %}<a href="{{ path( 'Blueline_Towers_view', { 'id': method.firstTowerbellPeal.locationTower.id } ) }}">{{ method.firstTowerbellPeal.location }}</a>{% else %}{{ method.firstTowerbellPeal.location }}{% endif %}{% endif %}</dd>
{% endif %}
{% if method.firstHandbellPeal is not empty %}
				<dt>First&nbsp;handbell&nbsp;peal</dt>
				<dd><time datetime="{{ method.firstHandbellPeal.date|date('Y-m-d') }}">{{ method.firstHandbellPeal.date|date('j<\\s\\up>S</\\s\\up> M Y')|raw }}</time>{% if method.firstHandbellPeal.location is not empty %} at {% if method.firstHandbellPeal.locationTower is not empty %}<a href="{{ path( 'Blueline_Towers_view', { 'id': method.firstHandbellPeal.locationTower.id } ) }}">{{ method.firstHandbellPeal.location }}</a>{% else %}{{ method.firstHandbellPeal.location }}{% endif %}{% endif %}</dd>
{% endif %}
{% if method.duplicates is not empty %}
				<dt>Method also pealed as</dt>
				<dd>
				{% for duplicate in method.duplicates %}
					'{{ duplicate.rungTitle }}'{{ duplicate.date ? (' on <time datetime="'~duplicate.date|date('Y-m-d')~'">'~duplicate.date|date('j<\\s\\up>S</\\s\\up> M Y')~'</time>')|raw }}{{ duplicate.reference ? ' ('~duplicate.reference~')' }}<br />
				{% endfor %}
				</dd>
{% endif %}
				<dt>Download as image</dt>
				{% if custom is not defined or not custom %}
				<dd><a href="{{ path( 'Blueline_Methods_view', { 'url': method.url, '_format': 'png', 'scale': 2, 'style': 'numbers' } ) }}" class="external" data-forcerefresh="true">Numbers</a><br/><a href="{{ path( 'Blueline_Methods_view', { 'url': method.url, '_format': 'png', 'scale': 2, 'style': 'grid' } ) }}" class="external" data-forcerefresh="true">Grid</a></dd>
				{% else %}
				<dd><a href="{{ path( 'Blueline_Methods_custom_view', { 'stage': method.stage, 'notation': method.notation, '_format': 'png', 'scale': 2, 'style': 'numbers' } ) }}" class="external" data-forcerefresh="true">Numbers</a><br/><a href="{{ path( 'Blueline_Methods_custom_view', { 'stage': method.stage, 'notation': method.notation, '_format': 'png', 'scale': 2, 'style': 'grid' } ) }}" class="external" data-forcerefresh="true">Grid</a></dd>
				{% endif %}
				<dt>Data Source and Copyright</dt>
				<dd>Details on the <a href="{{ path( 'Blueline_Pages_view', { 'page': 'about' } ) }}">about page</a>.</dd>
			</dl>
		</div>
		<div id="method_numbers" class="numbers"><noscript><div class="wrap"><img src="{{ path( 'Blueline_Methods_view', { 'url': method.url, '_format': 'png', 'scale': 1, 'style': 'numbers' } ) }}" alt="{{ method.title }}" /></div></noscript></div>
		<div id="method_line" class="line"><noscript><div class="wrap"><img src="{{ path( 'Blueline_Methods_view', { 'url': method.url, '_format': 'png', 'scale': 1, 'style': 'line' } ) }}" alt="{{ method.title }}" /></div></noscript></div>
		<div id="method_grid" class="grid"><noscript><div class="wrap"><img src="{{ path( 'Blueline_Methods_view', { 'url': method.url, '_format': 'png', 'scale': 1, 'style': 'grid' } ) }}" alt="{{ method.title }}" /></div></noscript></div>
		<div class="MethodView" data-set="{{ {
			id: 0,
			numbersContainer: '#method_numbers',
			lineContainer: '#method_line',
			gridContainer: '#method_grid',
			stage: method.stage,
			notation: method.notationExpanded,
			calls: method.calls|default(false),
			callingPositions: method.callingPositions|default(false),
			ruleOffs: method.ruleOffs
		}|json_encode() }}"></div>
	</section>
{% endblock %}
