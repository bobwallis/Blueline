{% extends 'BluelineCCCBRDataBundle::base.html.twig' %}

{% block title %}{{ pageTitle }} | Methods | {{ parent() }}{% endblock %}
{% set breadcrumb = [ {'title':'Methods', 'href':path('Blueline_Methods_welcome')} ] %}
{% set search_opensearch = 'methods' %}
{% set search_header = true %}
{% set search_action = path( 'Blueline_Methods_search' ) %}
{% set search_placeholder = 'Search methods' %}

{% block body %}
	{% from 'BluelineCCCBRDataBundle:Macros:header.html.twig' import header %}
	{% for method in methods|default([]) %}
	<section class="method">
		{{ header( method.title, null, { 'id': 'method_'~method.ID~'_tabBar', 'tabs': [
			{ 'title': 'Details', 'content': 'method_details_'~method.ID },
			{ 'title': 'Line', 'content': 'method_line_'~method.ID },
			{ 'title': 'Grid', 'content': 'method_grid_'~method.ID }
		], 'active': 1 } ) }}
		<div id="method_details_{{ method.ID }}" class="details">
			<noscript><h2>Details</h2></noscript>
			<table>
				<tr>
					<th>Classification:</th>
					<td>{{ (method.differential? 'Differential ':'') ~ (method.little? 'Little ':'') ~ method.classification ~ ' ' ~ method.stageText }}</td>
				</tr>
				<tr>
					<th>Place&nbsp;Notation:</th>
					<td><abbr title="{{ method.notationExpanded }}">{{ method.notation }}</abbr></td>
				</tr>
				<tr>
					<th>Lead&nbsp;Head:</th>
					<td>{{ (method.leadHead ~ (method.leadHeadCode? ' <small>(Code: ' ~ method.leadHeadCode ~ ')</small>' : ''))|raw }}</td>
				</tr>
	{% if method.palindromic or method.doubleSym or method.rotational %}
				<tr>
					<th>Symmetry:</th>
					<td>{{ method.symmetryText }}</td>
				</tr>
	{% endif %}
	{% if method.fchGroups is not empty %}
				<tr>
					<th><abbr title="False Course Head">FCH</abbr>&nbsp;Groups:</th>
					<td>{{ method.fchGroups }}</td>
				</tr>
	{% endif %}
				<tr>
					<th>Hunt&nbsp;Bells:</th>
					<td>{{ ( method.numberOfHunts > 0 )? method.hunts|join(', ') : 'None' }}</td>
				</tr>
	{% if method.lengthOfLead > 0 %}
				<tr>
					<th>Lead&nbsp;Length:</th>
					<td>{{ method.lengthOfLead }} rows</td>
				</tr>
	{% endif %}
	{% if method.firstTowerbellPealDate is not empty %}
				<tr>
					<th>First&nbsp;towerbell&nbsp;peal:</th>
					<td>{{ method.firstTowerbellPealDate|date('j<\\s\\up>S</\\s\\up> M Y')|raw }}{% if method.firstTowerbellPealLocation is not empty %} at <a href="{{ path( 'Blueline_Towers_view', { 'doveid': method.firstTowerBellPealTower.doveid } ) }}">{{ method.firstTowerbellPealLocation }}</a>{% endif %}</td>
				</tr>
	{% endif %}
	{% if method.firstHandbellpealDate is not empty %}
				<tr>
					<th>First&nbsp;handbell&nbsp;peal:</th>
					<td>{{ method.firstHandbellpealDate|date('j<\\s\\up>S</\\s\\up> M Y')|raw }}</td>
				</tr>
	{% endif %}
			</table>
		</div>
		<div id="method_line_{{ method.ID }}" class="line"></div>
		<div id="method_grid_{{ method.ID }}" class="grid"></div>
		<script>
		{% autoescape false %}
		//<![CDATA[
			require( ['ui/MethodView'], function( MethodView ) {
				new MethodView( {
					id: '{{ method.ID }}',
					numbersContainer: '#method_line_{{ method.ID }}',
					gridContainer: '#method_grid_{{ method.ID }}',
					stage: {{ method.stage }},
					notation: '{{ method.notationExpanded }}',
					calls: {{ method.calls|json_encode }},
					callingPositions: {{ method.callingPositions|json_encode }},
					ruleOffs: {{ method.ruleOffs|json_encode }}
				} );
			} );
		//]]>
		{% endautoescape %}
		</script>
	</section>
	{% endfor %}
{% endblock %}
